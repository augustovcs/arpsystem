@page "/analyzer"
@using ERPSystem.Client.Components
@using Radzen
@using Radzen.Blazor

<style>
    #uploadWithDragAndDrop {
        left: 0;
        --rz-upload-button-bar-background-color: transparent;
        --rz-upload-button-bar-padding: 0;
    }

    #uploadWithDragAndDrop .rz-fileupload-buttonbar .rz-fileupload-choose {
        width: 100%;
        text-align: center;
        font-size: 16px;
        padding: 100px 0;
    }
    
    
</style>

<RadzenCard Variant="Variant.Outlined">
    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">
        Drag and drop files to upload
    </RadzenText>

    <RadzenUpload id="uploadWithDragAndDrop"
                  @ref="upload"
                  ChooseText="Drag and drop here or click to choose files"
                  Auto="false"
                  Multiple="true"
                  Url="/upload/multiple"
                  Progress="@OnProgress"
                  Change="@OnFileChange"
                  Style="width: 100%" />

    <RadzenButton Text="Upload" Click="@OnUpload" class="rz-mt-4" />
</RadzenCard>

<EventConsole @ref="@console" />

@code {
    RadzenUpload upload;
    EventConsole console;
    IEnumerable<IBrowserFile> selectedFiles;

    void OnFileChange(UploadChangeEventArgs args)
    {
        selectedFiles = args.Files;
        console?.Log($"{selectedFiles.Count()} file(s) ready to upload.");
    }

    void OnUpload()
    {
        if (selectedFiles == null || !selectedFiles.Any())
        {
            console?.Log("No files selected.");
            return;
        }

        upload.Upload();
    }

    void OnProgress(UploadProgressArgs args)
    {
        console?.Log($"Upload progress: {args.Progress}% / {args.Loaded} of {args.Total} bytes");

        if (args.Progress == 100)
        {
            foreach (var file in args.Files)
            {
                console?.Log($"Uploaded: {file.Name} / {file.Size} bytes");
            }
        }
    }
}
